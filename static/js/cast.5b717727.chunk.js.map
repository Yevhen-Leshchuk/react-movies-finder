{"version":3,"file":"static/js/cast.5b717727.chunk.js","mappings":"yRACA,EAAuB,mBAAvB,EAAuD,yBAAvD,EAA2F,uBAA3F,EAA4H,sBAA5H,EAAiK,2BAAjK,EAAuM,uBAAvM,EAA8O,4BAA9O,EAA8R,gCAA9R,EAA4U,0B,SCkE5U,EA5Da,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAa,GAEbE,EAAAA,EAAAA,kBACqBR,GAClBS,MAAK,YAAe,IAAZN,EAAW,EAAXA,KACPC,EAAQD,MAETO,SAAQ,WACPJ,GAAa,MAEdK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAIjB,CAACZ,KAGF,iBAAKe,UAAWC,EAAhB,UACGX,IAAa,SAACY,EAAA,EAAD,KAEd,eAAIF,UAAWC,EAAf,SACmB,IAAhBb,EAAKe,OACJf,EAAKgB,KAAI,SAAAC,GAAK,OACZ,gBAAmBL,UAAWC,EAA9B,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXK,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxCC,EAENC,IAAKJ,EAAMK,UAGf,cAAGV,UAAWC,EAAd,SAA2BI,EAAMK,QACjC,eAAGV,UAAWC,EAAd,wBAEE,iBAAMD,UAAWC,EAAjB,SAAuCI,EAAMM,iBAfxCN,EAAMO,QAoBjB,eAAIZ,UAAWC,EAAf,4D,yECxDJY,EAAU,mCACVC,EAAO,+BAEPC,EAAa,mCAAG,sGACGC,IAAAA,IAAA,UAClBF,EADkB,qCACkBD,IAFrB,uBACZI,EADY,EACZA,KADY,kBAKbA,GALa,2CAAH,qDAQbC,EAAa,mCAAG,WAAMC,GAAN,yFACGH,IAAAA,IAAA,UAClBF,EADkB,iCACcD,EADd,kBAC+BM,IAFlC,uBACZF,EADY,EACZA,KADY,kBAKbA,GALa,2CAAH,sDAQbG,EAAgB,mCAAG,WAAMnC,GAAN,yFACA+B,IAAAA,IAAA,UAClBF,EADkB,kBACD7B,EADC,oBACkB4B,EADlB,oBADA,uBACfI,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,sDAQhBI,EAAiB,mCAAG,WAAMpC,GAAN,yFACD+B,IAAAA,IAAA,UAClBF,EADkB,kBACD7B,EADC,4BAC0B4B,EAD1B,oBADC,uBAChBI,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQjBK,EAAiB,mCAAG,WAAMrC,GAAN,yFACD+B,IAAAA,IAAA,UAClBF,EADkB,kBACD7B,EADC,4BAC0B4B,EAD1B,oBADC,uBAChBI,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQjBM,EAAM,CACVR,cAAAA,EACAG,cAAAA,EACAE,iBAAAA,EACAC,kBAAAA,EACAC,kBAAAA,GAGF","sources":["webpack://react-movies-finder/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__9bpv2\",\"CastGalery\":\"Cast_CastGalery__wQFC8\",\"CastCard\":\"Cast_CastCard__Cyxe6\",\"CastBox\":\"Cast_CastBox__2ViUp\",\"CastBoxImage\":\"Cast_CastBoxImage__DWuu+\",\"CastName\":\"Cast_CastName__JwJlv\",\"CastCharacter\":\"Cast_CastCharacter__u5VIV\",\"CastCharacterInfo\":\"Cast_CastCharacterInfo__Mofpp\",\"CastNoTitle\":\"Cast_CastNoTitle__Cs+KT\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesApi from '../../services/moviesApi';\nimport Loader from '../../components/Loader/Loader';\nimport defaultImg from '../../images/no-actor.jpg';\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = () => {\n      setIsLoading(true);\n\n      moviesApi\n        .fetchMovieCredits(movieId)\n        .then(({ cast }) => {\n          setCast(cast);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <div className={s.Cast}>\n      {isLoading && <Loader />}\n\n      <ul className={s.CastGalery}>\n        {cast.length !== 0 ? (\n          cast.map(actor => (\n            <li key={actor.id} className={s.CastCard}>\n              <div className={s.CastBox}>\n                <img\n                  className={s.CastBoxImage}\n                  src={\n                    actor.profile_path\n                      ? `http://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                      : defaultImg\n                  }\n                  alt={actor.name}\n                />\n              </div>\n              <p className={s.CastName}>{actor.name}</p>\n              <p className={s.CastCharacter}>\n                Character:\n                <span className={s.CastCharacterInfo}>{actor.character}</span>\n              </p>\n            </li>\n          ))\n        ) : (\n          <h1 className={s.CastNoTitle}>\n            We don't have any casts for this movie!\n          </h1>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst api_key = 'c02b36da545a5844f0cde427ebff9c5c';\nconst baseURL = `https://api.themoviedb.org/3`;\n\nconst fetchTrending = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/all/day?api_key=${api_key}`\n  );\n\n  return data;\n};\n\nconst fetcnOnSearch = async searchQuery => {\n  const { data } = await axios.get(\n    `${baseURL}/search/movie?api_key=${api_key}&query=${searchQuery}`\n  );\n\n  return data;\n};\n\nconst fetchMovieDetail = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/reviews?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst api = {\n  fetchTrending,\n  fetcnOnSearch,\n  fetchMovieDetail,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","moviesApi","then","finally","catch","error","console","log","className","s","Loader","length","map","actor","src","profile_path","defaultImg","alt","name","character","id","api_key","baseURL","fetchTrending","axios","data","fetcnOnSearch","searchQuery","fetchMovieDetail","fetchMovieCredits","fetchMovieReviews","api"],"sourceRoot":""}