{"version":3,"file":"static/js/home-page.7405d9eb.chunk.js","mappings":"sPACA,EAAyB,2BAAzB,EAAiE,+BAAjE,EAA6G,+BAA7G,EAA8J,oCAA9J,EAAoN,oC,SCgDpN,EA3CmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACV,gBAAaN,UAAWC,EAAxB,WACE,gBAAKD,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEM,GAAI,CACFC,SAAS,UAAD,OAAYL,GACpBM,MAAO,CAAEC,KAAMZ,IAHnB,UAME,gBACEE,UAAWC,EACXU,IACEP,EAAW,0CAC4BA,GACnCQ,EAENC,IAAKR,SAIX,eAAGL,UAAWC,EAAd,qBAAmCK,QAAnC,IAAmCA,EAAAA,EAAQD,OAnBpCF,SCwBjB,EA/BiB,WACf,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAa,GAEbE,EAAAA,EAAAA,gBAEGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAUM,MAEXC,SAAQ,WACPL,GAAa,MAEdM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAIjB,KAGD,gCACGR,IAAa,SAACW,EAAA,EAAD,KACd,SAAC,EAAD,CAAY9B,OAAQA,S,yEC7BpB+B,EAAU,mCACVC,EAAO,+BAEPC,EAAa,mCAAG,sGACGC,IAAAA,IAAA,UAClBF,EADkB,qCACkBD,IAFrB,uBACZI,EADY,EACZA,KADY,kBAKbA,GALa,2CAAH,qDAQbC,EAAa,mCAAG,WAAMC,GAAN,yFACGH,IAAAA,IAAA,UAClBF,EADkB,iCACcD,EADd,kBAC+BM,IAFlC,uBACZF,EADY,EACZA,KADY,kBAKbA,GALa,2CAAH,sDAQbG,EAAgB,mCAAG,WAAMC,GAAN,yFACAL,IAAAA,IAAA,UAClBF,EADkB,kBACDO,EADC,oBACkBR,EADlB,oBADA,uBACfI,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,sDAQhBK,EAAiB,mCAAG,WAAMD,GAAN,yFACDL,IAAAA,IAAA,UAClBF,EADkB,kBACDO,EADC,4BAC0BR,EAD1B,oBADC,uBAChBI,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQjBM,EAAiB,mCAAG,WAAMF,GAAN,yFACDL,IAAAA,IAAA,UAClBF,EADkB,kBACDO,EADC,4BAC0BR,EAD1B,oBADC,uBAChBI,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQjBO,EAAM,CACVT,cAAAA,EACAG,cAAAA,EACAE,iBAAAA,EACAE,kBAAAA,EACAC,kBAAAA,GAGF,O","sources":["webpack://react-movies-finder/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","pages/HomePage/HomePage.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Galery\":\"MoviesList_Galery__T-Z84\",\"GaleryCard\":\"MoviesList_GaleryCard__JXV1r\",\"GalleryBox\":\"MoviesList_GalleryBox__o23d7\",\"GalleryBoxImage\":\"MoviesList_GalleryBoxImage__G766A\",\"GaleryCardTitle\":\"MoviesList_GaleryCardTitle__kXNYA\"};","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport defaultImg from '../../images/no-poster.jpg';\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={s.Galery}>\n      {movies.map(({ id, poster_path, title, name }) => (\n        <li key={id} className={s.GaleryCard}>\n          <div className={s.GalleryBox}>\n            <Link\n              to={{\n                pathname: `movies/${id}`,\n                state: { from: location },\n              }}\n            >\n              <img\n                className={s.GalleryBoxImage}\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultImg\n                }\n                alt={title}\n              />\n            </Link>\n          </div>\n          <p className={s.GaleryCardTitle}> {name ?? title}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport moviesApi from '../../services/moviesApi';\nimport Loader from '../../components/Loader/Loader';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = () => {\n      setIsLoading(true);\n\n      moviesApi\n        .fetchTrending()\n        .then(({ results }) => {\n          setMovies(results);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst api_key = 'c02b36da545a5844f0cde427ebff9c5c';\nconst baseURL = `https://api.themoviedb.org/3`;\n\nconst fetchTrending = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/all/day?api_key=${api_key}`\n  );\n\n  return data;\n};\n\nconst fetcnOnSearch = async searchQuery => {\n  const { data } = await axios.get(\n    `${baseURL}/search/movie?api_key=${api_key}&query=${searchQuery}`\n  );\n\n  return data;\n};\n\nconst fetchMovieDetail = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/reviews?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst api = {\n  fetchTrending,\n  fetcnOnSearch,\n  fetchMovieDetail,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["movies","location","useLocation","className","s","map","id","poster_path","title","name","to","pathname","state","from","src","defaultImg","alt","useState","setMovies","isLoading","setIsLoading","useEffect","moviesApi","then","results","finally","catch","error","console","log","Loader","api_key","baseURL","fetchTrending","axios","data","fetcnOnSearch","searchQuery","fetchMovieDetail","movieId","fetchMovieCredits","fetchMovieReviews","api"],"sourceRoot":""}