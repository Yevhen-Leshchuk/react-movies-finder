{"version":3,"file":"static/js/movies-details-page.03d3205e.chunk.js","mappings":"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","sources":["webpack://react-movies-finder/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"MovieDetailsPage_Button__HC23b\",\"MovieBox\":\"MovieDetailsPage_MovieBox__vejZU\",\"MovieBoxImage\":\"MovieDetailsPage_MovieBoxImage__kH8LX\",\"MovieInfo\":\"MovieDetailsPage_MovieInfo__HhDau\",\"MovieTitle\":\"MovieDetailsPage_MovieTitle__Js62x\",\"MovieDesc\":\"MovieDetailsPage_MovieDesc__fxYrN\",\"MovieGenres\":\"MovieDetailsPage_MovieGenres__yayW0\",\"MovieGenresTitle\":\"MovieDetailsPage_MovieGenresTitle__Lba5Y\",\"Genres\":\"MovieDetailsPage_Genres__6HKa2\",\"GenresItem\":\"MovieDetailsPage_GenresItem__N3nkF\",\"MovieScoreTitle\":\"MovieDetailsPage_MovieScoreTitle__KKd+s\",\"MovieScoreValue\":\"MovieDetailsPage_MovieScoreValue__jw2M-\",\"MovieOverviewTitle\":\"MovieDetailsPage_MovieOverviewTitle__REq9B\",\"MovieOverviewText\":\"MovieDetailsPage_MovieOverviewText__Oqcx3\",\"AdditionalInformation\":\"MovieDetailsPage_AdditionalInformation__BRByy\",\"AdditionalTitle\":\"MovieDetailsPage_AdditionalTitle__+xnk6\",\"MovieNavBox\":\"MovieDetailsPage_MovieNavBox__giVvK\",\"MovieNavBtn\":\"MovieDetailsPage_MovieNavBtn__lIUpF\",\"MovieNavLink\":\"MovieDetailsPage_MovieNavLink__0G3MJ\",\"MovieNavLinkActiv\":\"MovieDetailsPage_MovieNavLinkActiv__dOAni MovieDetailsPage_MovieNavLink__0G3MJ\",\"PlugBox\":\"MovieDetailsPage_PlugBox__v3MQs\",\"PlugTitle\":\"MovieDetailsPage_PlugTitle__7dofJ MovieDetailsPage_MovieTitle__Js62x\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  NavLink,\n  useLocation,\n  useNavigate,\n  Outlet,\n} from 'react-router-dom';\nimport moviesApi from '../../services/moviesApi';\nimport defaultImg from '../../images/no-poster.jpg';\nimport plug from '../../images/plug.png';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [movie, setMovie] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(null);\n\n  const voteAverage = movie.vote_average * 10;\n\n  useEffect(() => {\n    const fetchMovies = () => {\n      moviesApi\n        .fetchMovieDetail(movieId)\n        .then(movie => {\n          setMovie(movie);\n          setGenres(movie.genres);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && (\n        <div className={s.PlugBox}>\n          <img className={s.PlugImage} src={plug} alt=\"Movies not found\" />\n          <h1 className={s.PlugTitle}>Movies not found</h1>\n        </div>\n      )}\n\n      {movie.length !== 0 && (\n        <div className={s.MovieDetails}>\n          <div className={s.MovieBox}>\n            <div>\n              <img\n                className={s.MovieBoxImage}\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                    : defaultImg\n                }\n                alt={movie.title}\n              />\n            </div>\n\n            <div className={s.MovieInfo}>\n              <h1 className={s.MovieTitle}>{movie.original_title}</h1>\n\n              <div className={s.MovieDesc}>\n                <div className={s.MovieGenres}>\n                  <h2 className={s.MovieGenresTitle}>Genres:</h2>\n                  <ul className={s.Genres}>\n                    {genres.map(genre => (\n                      <li key={genre.id} className={s.GenresItem}>\n                        {genre.name}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className={s.MovieScore}>\n                  <h2 className={s.MovieScoreTitle}>User Score:</h2>\n                  <span className={s.MovieScoreValue}>{voteAverage}%</span>\n                </div>\n              </div>\n\n              <h2 className={s.MovieOverviewTitle}>Overview</h2>\n              <p className={s.MovieOverviewText}>{movie.overview}</p>\n            </div>\n          </div>\n\n          <div className={s.AdditionalInformation}>\n            <h2 className={s.AdditionalTitle}>Additional information</h2>\n\n            <ul className={s.MovieNavBox}>\n              <li className={s.MovieNavBtn}>\n                <NavLink\n                  className={({ isActive }) =>\n                    isActive ? `${s.MovieNavLinkActiv}` : `${s.MovieNavLink}`\n                  }\n                  to={{\n                    pathname: 'cast',\n                    state: { from: location },\n                  }}\n                >\n                  Cast\n                </NavLink>\n              </li>\n\n              <li className={s.MovieNavBtn}>\n                <NavLink\n                  className={({ isActive }) =>\n                    isActive ? `${s.MovieNavLinkActiv}` : `${s.MovieNavLink}`\n                  }\n                  to={{\n                    pathname: 'reviews',\n                    state: { from: location },\n                  }}\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n\n            <Outlet />\n          </div>\n        </div>\n      )}\n\n      <button className={s.Button} type=\"button\" onClick={() => navigate(-1)}>\n        Go back\n      </button>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst api_key = 'c02b36da545a5844f0cde427ebff9c5c';\nconst baseURL = `https://api.themoviedb.org/3`;\n\nconst fetchTrending = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/all/day?api_key=${api_key}`\n  );\n\n  return data;\n};\n\nconst fetcnOnSearch = async searchQuery => {\n  const { data } = await axios.get(\n    `${baseURL}/search/movie?api_key=${api_key}&query=${searchQuery}`\n  );\n\n  return data;\n};\n\nconst fetchMovieDetail = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/reviews?api_key=${api_key}&language=en-US`\n  );\n\n  return data;\n};\n\nconst api = {\n  fetchTrending,\n  fetcnOnSearch,\n  fetchMovieDetail,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","location","useLocation","navigate","useNavigate","useState","movie","setMovie","genres","setGenres","error","setError","voteAverage","vote_average","useEffect","moviesApi","then","catch","className","s","src","plug","alt","length","poster_path","defaultImg","title","original_title","map","genre","name","id","overview","isActive","to","pathname","state","from","type","onClick","api_key","baseURL","fetchTrending","axios","data","fetcnOnSearch","searchQuery","fetchMovieDetail","fetchMovieCredits","fetchMovieReviews","api"],"sourceRoot":""}